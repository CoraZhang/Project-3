[{"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/App.js":"1","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NewNote.js":"2","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/NavBar.js":"3","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/KanBan.js":"4","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Emojiis.js":"5","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/utils/API.js":"6","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/index.js":"7","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/UserContext.js":"8","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NoteCount.js":"9","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/CalendarMain.js":"10","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Dialog.js":"11","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/config.js":"12","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/Notes.js":"13","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/AllEvents.js":"14","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/reducers/noteReducer.js":"15","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NoteList.js":"16","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Footer.js":"17","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/reportWebVitals.js":"18"},{"size":2525,"mtime":1607210241799,"results":"19","hashOfConfig":"20"},{"size":2127,"mtime":1606776059752,"results":"21","hashOfConfig":"20"},{"size":2001,"mtime":1606757127864,"results":"22","hashOfConfig":"20"},{"size":5702,"mtime":1606776059745,"results":"23","hashOfConfig":"20"},{"size":2755,"mtime":1606776059744,"results":"24","hashOfConfig":"20"},{"size":984,"mtime":1606784052467,"results":"25","hashOfConfig":"20"},{"size":945,"mtime":1606509007949,"results":"26","hashOfConfig":"20"},{"size":83,"mtime":1606757127861,"results":"27","hashOfConfig":"20"},{"size":400,"mtime":1606494231099,"results":"28","hashOfConfig":"20"},{"size":8722,"mtime":1607228835804,"results":"29","hashOfConfig":"20"},{"size":1665,"mtime":1606757127862,"results":"30","hashOfConfig":"20"},{"size":575,"mtime":1607102136834,"results":"31","hashOfConfig":"20"},{"size":1314,"mtime":1606776059753,"results":"32","hashOfConfig":"20"},{"size":3631,"mtime":1606836574111,"results":"33","hashOfConfig":"20"},{"size":756,"mtime":1606494231091,"results":"34","hashOfConfig":"20"},{"size":708,"mtime":1606757127879,"results":"35","hashOfConfig":"20"},{"size":201,"mtime":1606331778829,"results":"36","hashOfConfig":"20"},{"size":362,"mtime":1606244998950,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1s5lyyz",{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/App.js",["83","84","85"],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NewNote.js",["86","87","88","89"],"import React, { Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport API from '../utils/API'\nimport { UserContext } from '../UserContext'\nimport { v4 as uuidv4 } from 'uuid'\nimport Emoji from '../components/Emojiis'\n\nclass NewNote extends Component {\n\n  static contextType = UserContext\n\n  constructor(props){\n    super(props);\n    this.state = {\n      emoji : \"\"\n    };\n  }\n\n  saveNote = async (note) => {\n    const loggedUser = localStorage.getItem('user')\n    const {userInfo} = this.context;\n    let result = await API.saveNote(note, loggedUser)\n    //console.log('Adding note', note, userInfo)\n  }\n  \n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //const title = this.getTitle.value;\n    //const message = this.getMessage.value;\n    const data = {\n      id: uuidv4(),\n      title: this.getTitle.value,\n      message: this.getMessage.value,\n      editing: false,\n    };\n    this.props.dispatch({\n      type: \"ADD_NOTE\",\n      data,\n    });\n\n    this.saveNote(data)\n\n    //clear input box\n    this.getTitle.value = \"\";\n    this.getMessage.value = \"\";\n  };\n  render() {\n    const {userInfo, setUserInfo} = this.context;\n    return (\n      <div className=\"note-container\" style={{position: \"relative\"}}>\n        <h1 className=\"note_heading\">Create Note</h1>\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <input\n            required\n            type=\"text\"\n            ref={(input) => (this.getTitle = input)}\n            placeholder=\"Enter Note Title\"\n          />\n          <br />\n          <br />\n          <textarea\n            required\n            rows=\"5\"\n            ref={(input) => (this.getMessage = input)}\n            cols=\"28\"\n            placeholder=\"Enter Note\"\n\n          />\n          <Emoji data={(el)=>{\n            this.setState({emoji:el},()=>{this.getMessage.value += this.state.emoji});\n            \n          }}></Emoji>\n          <br />\n          <br />\n          <button>Note</button>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    notes: state,\n  };\n};\nexport default connect(mapStateToProps)(NewNote);\n",["90","91"],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/NavBar.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/KanBan.js",["92"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport ListItem from '@material-ui/core/ListItem';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { green } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box';\n\nimport Dialog from './Dialog'\n\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`action-tabpanel-${index}`}\n      aria-labelledby={`action-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    'aria-controls': `action-tabpanel-${index}`,\n  };\n}\n\n\n\nconst useStyles = makeStyles((theme,matches) => ({\n  root: {\n    backgroundColor: 'white',\n    width: matches?500:1100,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: '8px',\n    right: '8px',\n  },\n  fabGreen: {\n    color: 'white',\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n}));\n\n\n\nexport default function FloatingActionButtonZoom() {\n  const [todoInput,setInput] = React.useState([])\n  const [doingInput, setDoing] = React.useState([])\n  const [doneInput, setDone] = React.useState([])\n  \n  const matches = useMediaQuery('(max-width:360px)');\n  console.log(\"media query: \", matches)\n  const theme = useTheme();\n  const classes = useStyles(theme,matches);\n  \n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\n  function changeToDo(text){\n    let list = [...doingInput];\n    list.push(text)\n    setDoing(list)\n    const todo = [...todoInput.filter(e=>e!==text)]\n    setInput(todo)\n  }\n\n  function changeDoing(text){\n    let list = [...doneInput];\n    list.push(text)\n    setDone(list)\n    const todo = [...doingInput.filter(e=>e!==text)]\n    setDoing(todo)\n  }\n\n  function changeDone(text){\n    const todo = [...doneInput.filter(e=>e!==text)]\n    setDone(todo)\n  }\n\n  const fabs = [\n    {\n      color: 'primary',\n      className: classes.fab,\n      icon: <AddIcon />,\n      label: 'Add',\n    },\n    {\n      color: 'secondary',\n      className: classes.fab,\n      icon: <EditIcon />,\n      label: 'Edit',\n    },\n    {\n      color: 'inherit',\n      className: clsx(classes.fab, classes.fabGreen),\n      icon: <AddIcon />,\n      label: 'Add',\n    },\n  ];\n  return (\n    <>\n      <div>\n          <h2>Instructions</h2>\n          <ul>\n            <li>Click on the '+' button to add items to the KanBan</li>\n            <li>Select the item to move it to the next tab</li>\n          </ul>\n      </div>\n      <div className={classes.root} style={{}}>\n        \n        <AppBar position=\"static\" color=\"default\">   \n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"action tabs example\"\n          >\n            <Tab label=\"To-Do\" {...a11yProps(0)} />\n            <Tab label=\"Doing\" {...a11yProps(1)} />\n            <Tab label=\"Done\" {...a11yProps(2)} />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={value}\n          onChangeIndex={handleChangeIndex}\n        >\n          <TabPanel value={value} index={0} dir={theme.direction}>\n            {todoInput.map(text=>{\n              return(<ListItem button onClick={()=>changeToDo(text)}>\n                {text} \n                </ListItem>)\n              \n            })}\n          </TabPanel>\n          <TabPanel value={value} index={1} dir={theme.direction}>\n            {doingInput.map(text=>{\n              return(<ListItem button onClick={()=>changeDoing(text)}>\n                {text} \n                </ListItem>)\n              \n            })}\n          </TabPanel>\n          <TabPanel value={value} index={2} dir={theme.direction}>\n          {doneInput.map(text=>{\n              return(<ListItem button onClick={()=>changeDone(text)}>\n                {text} \n                </ListItem>)\n              \n            })}\n          </TabPanel>\n        </SwipeableViews>\n        {fabs.map((fab, index) => (\n          <Zoom\n            key={fab.color}\n            in={value === 0}\n            timeout={transitionDuration}\n            style={{\n              transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n            }}\n            unmountOnExit\n          >\n            <Dialog label={fab.label} className={fab.className} color={fab.color} icon={fab.icon} func={setInput} val={todoInput}></Dialog>\n          </Zoom>\n        ))}\n\n      </div>\n    </>\n  );\n}",["93","94"],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Emojiis.js",["95","96","97","98","99","100","101","102","103"],"import React, {useEffect} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Fab from '@material-ui/core/Fab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { getThemeProps } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function EmojiDrawer(props) {\n  const [emojis, setEmojis] = React.useState({}) \n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  useEffect(()=>{\n    getEmoji()\n    \n  },[])\n\n  async function getEmoji(){\n      const result = await fetch('https://raw.githubusercontent.com/omnidan/node-emoji/master/lib/emoji.json').then(r=>r.json())\n      console.log(result)\n      setEmojis(result)\n  }\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n       <GridList cellHeight={50} cols={4}>\n        {Object.values(emojis).map((e)=>{\n          return (\n          <GridListTile  cols={e.cols || 1} style={{backgroundColor:\"#F2E291\"}}>\n              <GridListTileBar title={e} style={{backgroundColor:\"#F2E291\"}} onClick={()=>props.data(e)}></GridListTileBar>\n          </GridListTile>\n        )})}\n      </GridList>\n    </div>\n  );\n\n  return (\n    <div>\n        <React.Fragment key={'right'}>\n          <Fab onClick={toggleDrawer('right', true)} style={{position:\"absolute\", right:\"0px\" }}><FavoriteIcon /></Fab>\n          <Drawer anchor={'right'} open={state['right']} onClose={toggleDrawer('right', false)}>\n            {list('right')}\n          </Drawer>\n        </React.Fragment>\n    </div>\n  );\n}","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/utils/API.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/index.js",[],["104","105"],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/UserContext.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NoteCount.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/CalendarMain.js",["106","107","108","109","110","111","112","113","114"],"import React, { useState, useEffect, useContext } from \"react\";\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport API from '../utils/API'\nimport {UserContext} from '../UserContext'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Draggable from 'react-draggable';\n\n\nexport default function CalendarMain() {\n  const [weekendsVisible, setWeekendsVisible] = useState(true);\n  const [currentEvents, setCurrentEvents] = useState([]);\n  const [eventList, setEventList] = useState([])\n  const {userInfo, setUserInfo} = useContext(UserContext)\n  const [userEmail, setUserEmail] = useState(\"\")\n  const loggedUser = localStorage.getItem('user')\n  const [title, setTitle] = useState(\"\")\n  const [selectInfo, setSelectInfo] = useState({})\n  const [clickInfo, setClickInfo] = useState({})\n\n  useEffect(() => {\n    getEvents()\n  }, [])\n\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [openEvent, setOpenEvent] = React.useState(false);\n\n  // handle events for open and close add event modal\n\n  const handleOpen = (eventInfo) => {\n    setOpen(true);\n    setSelectInfo(eventInfo)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // handle events for open and close delete event dialog\n\n  const handleClickOpen = (clickedInfo) => {\n    setOpenEvent(true);\n    setClickInfo(clickedInfo)\n  };\n\n  const handleClickClose = () => {\n    setOpenEvent(false);\n  };\n\n  function handleWeekendsToggle() {\n    setWeekendsVisible(!weekendsVisible);\n  }\n\n\n  function handleInputChange(event){\n    const newEventTitle = event.target.value\n    setTitle(newEventTitle)\n  }\n\n  function handleDateSelect() {\n    let calendarApi = selectInfo.view.calendar;\n\n    calendarApi.unselect(); // clears date selection\n\n    if (title) {\n      calendarApi.addEvent({\n        id: uuidv4(),\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay,\n      });\n    }\n  }\n\n  function handleEventClick() {\n    clickInfo.event.remove()\n  }\n\n  function handleEvents(events) {\n    setCurrentEvents(events);\n  }\n\n  async function addEvents(data){\n    \n    let newEvent = {\n      id: data.event.id,\n      title: data.event.title,\n      start: data.event.start,\n      end: data.event.end,\n      allDay: data.event.allDay\n    }\n    let result = await API.addEvent(newEvent, loggedUser)\n  }\n\n  async function getEvents(){\n    let result = await API.getInfo()\n    if (result.data){\n      let currentUserData = result.data.filter(user => user.email === loggedUser)\n      console.log('[currentUserData]:', result.data)\n      currentUserData[0]?setEventList(currentUserData[0].events):setEventList([])\n    \n      \n    }\n    \n\n  }\n\n  async function updateEvent(data){\n    let result = await API.updateEvent(data, loggedUser)\n  }\n\n  async function deleteEvent(data){\n    let result = await API.deleteEvent(data.event.id)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <RenderSidebar handleWeekendsToggle={handleWeekendsToggle} weekendsVisible={weekendsVisible} currentEvents={currentEvents}/>\n\n          {/* Modal for adding event */}\n        <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <button className=\"btn btn-primary-outline float-right\" onClick={handleClose} style={{backgroundColor: \"transparent\"}}><i class=\"fas fa-times\"></i></button>\n            <h2 id=\"transition-modal-title\">Add a title for your event</h2>\n            <div id=\"transition-modal-description\">\n                <div className=\"mb-3\" >\n                  <input onChange={handleInputChange} type=\"title\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Title\" />\n                </div>\n                <div class=\"form-check form-switch\">\n                  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckChecked\" defaultChecked/>\n                  <label className=\"form-check-label\" for=\"flexSwitchCheckChecked\">All Day</label>\n                  <button className=\"btn btn-primary float-right\" type=\"submit\" onClick={() => {handleClose(); handleDateSelect()} }> Add to Calendar</button>\n                </div>\n            </div>\n            \n          </div>\n        </Fade>\n      </Modal>\n\n        {/* Modal for deleting event */}\n        <Dialog\n          open={openEvent}\n          onClose={handleClickClose}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n            Delete Event\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Are you sure you want to delete this event? This action is IRREVERSIBLE.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClickClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={() => {handleClickClose(); handleEventClick()}} color=\"secondary\">\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <FullCalendar\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          headerToolbar={{\n            left: \"prev,next today\",\n            center: \"title\",\n            right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n          }}\n          footerToolbar={{\n            left: \"\",\n            center: \"\",\n            right: \"\",\n          }}\n          initalView=\"dayGridMonth\"\n          editable={true}\n          selectable={true}\n          selectMirror={true}\n          dayMaxEvents={true}\n          weekends={weekendsVisible}\n          events={eventList} //TODO: or use 'events' setting to fetch from a feed\n          select={handleOpen}\n          eventContent={renderEventContent} // custom render function\n          eventClick={handleClickOpen}\n          eventsSet={handleEvents}\n          eventAdd={(response) => addEvents(response)}\n          eventChange={(response) => updateEvent(response)}\n          eventRemove={(response) => deleteEvent(response)}\n        />\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nfunction RenderSidebar(props) {\n  return (\n    <div>\n      <div>\n        <h2>Instructions</h2>\n        <ul>\n          <li>Select dates and you will be prompted to create a new event</li>\n          <li>Drag, drop, and resize events</li>\n          <li>Double-click an event to delete it</li>\n        </ul>\n      </div>\n      <div>\n        {/* FIXME:  change checkbox to switch */}\n        <label>\n          <input type=\"checkbox\" checked={props.weekendsVisible} onChange={props.handleWeekendsToggle} /> Toggle Weekends\n        </label>\n      </div>\n    </div>\n  );\n}\n\nfunction renderEventContent(eventInfo) {\n  return (\n    <>\n      <b>{eventInfo.timeText}</b>\n      <i>{eventInfo.event.title}</i>\n    </>\n  );\n}\n\n// function renderSidebarEvent(event) {\n//   return (\n//     <li key={event.id}>\n//       <b>\n//         {formatDate(event.start, {\n//           year: \"numeric\",\n//           month: \"short\",\n//           day: \"numeric\",\n//         })}\n//       </b>\n//     </li>\n//   );\n// }\n","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Dialog.js",["115","116","117"],"import React, {useRef} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\n\n\nexport default function FormDialog(props) {\n  \n  const [open, setOpen] = React.useState(false);\n  const TextField = React.createRef();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    let Input = [...props.val]\n    Input.push(TextField.current.value)\n    props.func(Input)\n    setOpen(false);\n  };\n\n  return (\n    <div>\n        <Fab aria-label={props.label} className={props.className} color={props.color} onClick={handleClickOpen}>\n            {props.icon}\n        </Fab>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">To Do:</DialogTitle>\n        <DialogContent>\n          <input\n            ref= {TextField}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"To-Do:\"\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/config.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/Notes.js",["118"],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/AllEvents.js",["119","120","121","122","123"],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/reducers/noteReducer.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NoteList.js",["124"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Notes from \"./Notes\";\nimport EditNote from \"./EditNote\";\nimport NewNote from \"./NewNote\";\n\nclass NoteList extends Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"note_heading\">All Notes</h1>\n        {this.props.notes.map((note) => (\n          <div key={note.id}>\n            {note.editing ? (\n              <EditNote note={note} key={note.id} />\n            ):\n            (<NewNote note ={note} key={note.id}/>)}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    notes: state,\n  };\n};\n\nexport default connect(mapStateToProps)(NoteList);\n","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Footer.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/reportWebVitals.js",[],{"ruleId":"125","severity":1,"message":"126","line":5,"column":27,"nodeType":"127","messageId":"128","endLine":5,"endColumn":34},{"ruleId":"125","severity":1,"message":"129","line":7,"column":27,"nodeType":"127","messageId":"128","endLine":7,"endColumn":33},{"ruleId":"125","severity":1,"message":"130","line":19,"column":20,"nodeType":"127","messageId":"128","endLine":19,"endColumn":31},{"ruleId":"125","severity":1,"message":"131","line":21,"column":12,"nodeType":"127","messageId":"128","endLine":21,"endColumn":20},{"ruleId":"125","severity":1,"message":"132","line":22,"column":9,"nodeType":"127","messageId":"128","endLine":22,"endColumn":15},{"ruleId":"125","severity":1,"message":"131","line":49,"column":12,"nodeType":"127","messageId":"128","endLine":49,"endColumn":20},{"ruleId":"125","severity":1,"message":"133","line":49,"column":22,"nodeType":"127","messageId":"128","endLine":49,"endColumn":33},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"125","severity":1,"message":"138","line":15,"column":8,"nodeType":"127","messageId":"128","endLine":15,"endColumn":14},{"ruleId":"134","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"125","severity":1,"message":"141","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":14},{"ruleId":"125","severity":1,"message":"142","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":12},{"ruleId":"125","severity":1,"message":"143","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":15},{"ruleId":"125","severity":1,"message":"144","line":8,"column":8,"nodeType":"127","messageId":"128","endLine":8,"endColumn":16},{"ruleId":"125","severity":1,"message":"145","line":9,"column":8,"nodeType":"127","messageId":"128","endLine":9,"endColumn":20},{"ruleId":"125","severity":1,"message":"146","line":10,"column":8,"nodeType":"127","messageId":"128","endLine":10,"endColumn":20},{"ruleId":"125","severity":1,"message":"147","line":11,"column":8,"nodeType":"127","messageId":"128","endLine":11,"endColumn":17},{"ruleId":"125","severity":1,"message":"148","line":12,"column":8,"nodeType":"127","messageId":"128","endLine":12,"endColumn":16},{"ruleId":"125","severity":1,"message":"149","line":18,"column":10,"nodeType":"127","messageId":"128","endLine":18,"endColumn":23},{"ruleId":"134","replacedBy":"150"},{"ruleId":"136","replacedBy":"151"},{"ruleId":"125","severity":1,"message":"152","line":2,"column":24,"nodeType":"127","messageId":"128","endLine":2,"endColumn":34},{"ruleId":"125","severity":1,"message":"131","line":29,"column":10,"nodeType":"127","messageId":"128","endLine":29,"endColumn":18},{"ruleId":"125","severity":1,"message":"133","line":29,"column":20,"nodeType":"127","messageId":"128","endLine":29,"endColumn":31},{"ruleId":"125","severity":1,"message":"153","line":30,"column":10,"nodeType":"127","messageId":"128","endLine":30,"endColumn":19},{"ruleId":"125","severity":1,"message":"154","line":30,"column":21,"nodeType":"127","messageId":"128","endLine":30,"endColumn":33},{"ruleId":"155","severity":1,"message":"156","line":38,"column":6,"nodeType":"157","endLine":38,"endColumn":8,"suggestions":"158"},{"ruleId":"125","severity":1,"message":"132","line":111,"column":9,"nodeType":"127","messageId":"128","endLine":111,"endColumn":15},{"ruleId":"125","severity":1,"message":"132","line":128,"column":9,"nodeType":"127","messageId":"128","endLine":128,"endColumn":15},{"ruleId":"125","severity":1,"message":"132","line":132,"column":9,"nodeType":"127","messageId":"128","endLine":132,"endColumn":15},{"ruleId":"125","severity":1,"message":"159","line":1,"column":16,"nodeType":"127","messageId":"128","endLine":1,"endColumn":22},{"ruleId":"125","severity":1,"message":"160","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":17},{"ruleId":"125","severity":1,"message":"161","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":25},{"ruleId":"125","severity":1,"message":"162","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":16},{"ruleId":"125","severity":1,"message":"163","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":12,"column":7,"nodeType":"157","endLine":12,"endColumn":9,"suggestions":"164"},{"ruleId":"125","severity":1,"message":"165","line":38,"column":20,"nodeType":"127","messageId":"128","endLine":38,"endColumn":29},{"ruleId":"125","severity":1,"message":"132","line":39,"column":13,"nodeType":"127","messageId":"128","endLine":39,"endColumn":19},{"ruleId":"166","severity":1,"message":"167","line":87,"column":23,"nodeType":"168","endLine":87,"endColumn":93},{"ruleId":"125","severity":1,"message":"169","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":13},"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'SecureRoute' is defined but never used.","'userInfo' is assigned a value but never used.","'result' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","no-native-reassign",["170"],"no-negated-in-lhs",["171"],"'UpIcon' is defined but never used.",["170"],["171"],"'Button' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'getThemeProps' is defined but never used.",["170"],["171"],"'formatDate' is defined but never used.","'userEmail' is assigned a value but never used.","'setUserEmail' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'useRef' is defined but never used.","'TextField' is defined but never used.","'DialogContentText' is defined but never used.","'EditNote' is defined but never used.","'moment' is defined but never used.",["173"],"'twilioReq' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Notes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"174","fix":"176"},"Update the dependencies array to be: [getEvents]",{"range":"177","text":"178"},{"range":"179","text":"178"},[1579,1581],"[getEvents]",[323,325]]