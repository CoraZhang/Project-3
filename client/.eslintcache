[{"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/App.js":"1","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NewNote.js":"2","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/NavBar.js":"3","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/KanBan.js":"4","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Emojiis.js":"5","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/utils/API.js":"6","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/index.js":"7","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/UserContext.js":"8","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NoteCount.js":"9","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/CalendarMain.js":"10","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Dialog.js":"11"},{"size":2559,"mtime":1606776059741,"results":"12","hashOfConfig":"13"},{"size":2127,"mtime":1606776059752,"results":"14","hashOfConfig":"13"},{"size":2001,"mtime":1606757127864,"results":"15","hashOfConfig":"13"},{"size":5702,"mtime":1606776059745,"results":"16","hashOfConfig":"13"},{"size":2755,"mtime":1606776059744,"results":"17","hashOfConfig":"13"},{"size":984,"mtime":1606784052467,"results":"18","hashOfConfig":"13"},{"size":945,"mtime":1606509007949,"results":"19","hashOfConfig":"13"},{"size":83,"mtime":1606757127861,"results":"20","hashOfConfig":"13"},{"size":400,"mtime":1606494231099,"results":"21","hashOfConfig":"13"},{"size":4604,"mtime":1606784052468,"results":"22","hashOfConfig":"13"},{"size":1665,"mtime":1606757127862,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1s5lyyz",{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/App.js",["49","50"],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NewNote.js",["51","52","53","54"],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/NavBar.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/KanBan.js",["55"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport ListItem from '@material-ui/core/ListItem';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { green } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box';\n\nimport Dialog from './Dialog'\n\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`action-tabpanel-${index}`}\n      aria-labelledby={`action-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    'aria-controls': `action-tabpanel-${index}`,\n  };\n}\n\n\n\nconst useStyles = makeStyles((theme,matches) => ({\n  root: {\n    backgroundColor: 'white',\n    width: matches?500:1100,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: '8px',\n    right: '8px',\n  },\n  fabGreen: {\n    color: 'white',\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n}));\n\n\n\nexport default function FloatingActionButtonZoom() {\n  const [todoInput,setInput] = React.useState([])\n  const [doingInput, setDoing] = React.useState([])\n  const [doneInput, setDone] = React.useState([])\n  \n  const matches = useMediaQuery('(max-width:360px)');\n  console.log(\"media query: \", matches)\n  const theme = useTheme();\n  const classes = useStyles(theme,matches);\n  \n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\n  function changeToDo(text){\n    let list = [...doingInput];\n    list.push(text)\n    setDoing(list)\n    const todo = [...todoInput.filter(e=>e!==text)]\n    setInput(todo)\n  }\n\n  function changeDoing(text){\n    let list = [...doneInput];\n    list.push(text)\n    setDone(list)\n    const todo = [...doingInput.filter(e=>e!==text)]\n    setDoing(todo)\n  }\n\n  function changeDone(text){\n    const todo = [...doneInput.filter(e=>e!==text)]\n    setDone(todo)\n  }\n\n  const fabs = [\n    {\n      color: 'primary',\n      className: classes.fab,\n      icon: <AddIcon />,\n      label: 'Add',\n    },\n    {\n      color: 'secondary',\n      className: classes.fab,\n      icon: <EditIcon />,\n      label: 'Edit',\n    },\n    {\n      color: 'inherit',\n      className: clsx(classes.fab, classes.fabGreen),\n      icon: <AddIcon />,\n      label: 'Add',\n    },\n  ];\n  return (\n    <>\n      <div>\n          <h2>Instructions</h2>\n          <ul>\n            <li>Click on the '+' button to add items to the KanBan</li>\n            <li>Select the item to move it to the next tab</li>\n          </ul>\n      </div>\n      <div className={classes.root} style={{}}>\n        \n        <AppBar position=\"static\" color=\"default\">   \n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"action tabs example\"\n          >\n            <Tab label=\"To-Do\" {...a11yProps(0)} />\n            <Tab label=\"Doing\" {...a11yProps(1)} />\n            <Tab label=\"Done\" {...a11yProps(2)} />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={value}\n          onChangeIndex={handleChangeIndex}\n        >\n          <TabPanel value={value} index={0} dir={theme.direction}>\n            {todoInput.map(text=>{\n              return(<ListItem button onClick={()=>changeToDo(text)}>\n                {text} \n                </ListItem>)\n              \n            })}\n          </TabPanel>\n          <TabPanel value={value} index={1} dir={theme.direction}>\n            {doingInput.map(text=>{\n              return(<ListItem button onClick={()=>changeDoing(text)}>\n                {text} \n                </ListItem>)\n              \n            })}\n          </TabPanel>\n          <TabPanel value={value} index={2} dir={theme.direction}>\n          {doneInput.map(text=>{\n              return(<ListItem button onClick={()=>changeDone(text)}>\n                {text} \n                </ListItem>)\n              \n            })}\n          </TabPanel>\n        </SwipeableViews>\n        {fabs.map((fab, index) => (\n          <Zoom\n            key={fab.color}\n            in={value === 0}\n            timeout={transitionDuration}\n            style={{\n              transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n            }}\n            unmountOnExit\n          >\n            <Dialog label={fab.label} className={fab.className} color={fab.color} icon={fab.icon} func={setInput} val={todoInput}></Dialog>\n          </Zoom>\n        ))}\n\n      </div>\n    </>\n  );\n}",["56","57"],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Emojiis.js",["58","59","60","61","62","63","64","65","66"],"import React, {useEffect} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Fab from '@material-ui/core/Fab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { getThemeProps } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function EmojiDrawer(props) {\n  const [emojis, setEmojis] = React.useState({}) \n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  useEffect(()=>{\n    getEmoji()\n    \n  },[])\n\n  async function getEmoji(){\n      const result = await fetch('https://raw.githubusercontent.com/omnidan/node-emoji/master/lib/emoji.json').then(r=>r.json())\n      console.log(result)\n      setEmojis(result)\n  }\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n       <GridList cellHeight={50} cols={4}>\n        {Object.values(emojis).map((e)=>{\n          return (\n          <GridListTile  cols={e.cols || 1} style={{backgroundColor:\"#F2E291\"}}>\n              <GridListTileBar title={e} style={{backgroundColor:\"#F2E291\"}} onClick={()=>props.data(e)}></GridListTileBar>\n          </GridListTile>\n        )})}\n      </GridList>\n    </div>\n  );\n\n  return (\n    <div>\n        <React.Fragment key={'right'}>\n          <Fab onClick={toggleDrawer('right', true)} style={{position:\"absolute\", right:\"0px\" }}><FavoriteIcon /></Fab>\n          <Drawer anchor={'right'} open={state['right']} onClose={toggleDrawer('right', false)}>\n            {list('right')}\n          </Drawer>\n        </React.Fragment>\n    </div>\n  );\n}","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/utils/API.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/index.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/UserContext.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NoteCount.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/CalendarMain.js",["67","68","69","70","71","72","73","74","75"],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Dialog.js",["76","77","78"],{"ruleId":"79","severity":1,"message":"80","line":5,"column":27,"nodeType":"81","messageId":"82","endLine":5,"endColumn":34},{"ruleId":"79","severity":1,"message":"83","line":7,"column":27,"nodeType":"81","messageId":"82","endLine":7,"endColumn":33},{"ruleId":"79","severity":1,"message":"84","line":21,"column":12,"nodeType":"81","messageId":"82","endLine":21,"endColumn":20},{"ruleId":"79","severity":1,"message":"85","line":22,"column":9,"nodeType":"81","messageId":"82","endLine":22,"endColumn":15},{"ruleId":"79","severity":1,"message":"84","line":49,"column":12,"nodeType":"81","messageId":"82","endLine":49,"endColumn":20},{"ruleId":"79","severity":1,"message":"86","line":49,"column":22,"nodeType":"81","messageId":"82","endLine":49,"endColumn":33},{"ruleId":"79","severity":1,"message":"87","line":15,"column":8,"nodeType":"81","messageId":"82","endLine":15,"endColumn":14},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"79","severity":1,"message":"92","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":14},{"ruleId":"79","severity":1,"message":"93","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":12},{"ruleId":"79","severity":1,"message":"94","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":15},{"ruleId":"79","severity":1,"message":"95","line":8,"column":8,"nodeType":"81","messageId":"82","endLine":8,"endColumn":16},{"ruleId":"79","severity":1,"message":"96","line":9,"column":8,"nodeType":"81","messageId":"82","endLine":9,"endColumn":20},{"ruleId":"79","severity":1,"message":"97","line":10,"column":8,"nodeType":"81","messageId":"82","endLine":10,"endColumn":20},{"ruleId":"79","severity":1,"message":"98","line":11,"column":8,"nodeType":"81","messageId":"82","endLine":11,"endColumn":17},{"ruleId":"79","severity":1,"message":"99","line":12,"column":8,"nodeType":"81","messageId":"82","endLine":12,"endColumn":16},{"ruleId":"79","severity":1,"message":"100","line":18,"column":10,"nodeType":"81","messageId":"82","endLine":18,"endColumn":23},{"ruleId":"79","severity":1,"message":"84","line":16,"column":10,"nodeType":"81","messageId":"82","endLine":16,"endColumn":18},{"ruleId":"79","severity":1,"message":"86","line":16,"column":20,"nodeType":"81","messageId":"82","endLine":16,"endColumn":31},{"ruleId":"79","severity":1,"message":"101","line":17,"column":10,"nodeType":"81","messageId":"82","endLine":17,"endColumn":19},{"ruleId":"79","severity":1,"message":"102","line":17,"column":21,"nodeType":"81","messageId":"82","endLine":17,"endColumn":33},{"ruleId":"103","severity":1,"message":"104","line":22,"column":6,"nodeType":"105","endLine":22,"endColumn":8,"suggestions":"106"},{"ruleId":"79","severity":1,"message":"85","line":69,"column":9,"nodeType":"81","messageId":"82","endLine":69,"endColumn":15},{"ruleId":"79","severity":1,"message":"85","line":86,"column":9,"nodeType":"81","messageId":"82","endLine":86,"endColumn":15},{"ruleId":"79","severity":1,"message":"85","line":90,"column":9,"nodeType":"81","messageId":"82","endLine":90,"endColumn":15},{"ruleId":"79","severity":1,"message":"107","line":157,"column":10,"nodeType":"81","messageId":"82","endLine":157,"endColumn":28},{"ruleId":"79","severity":1,"message":"108","line":1,"column":16,"nodeType":"81","messageId":"82","endLine":1,"endColumn":22},{"ruleId":"79","severity":1,"message":"109","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":17},{"ruleId":"79","severity":1,"message":"110","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":25},"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'userInfo' is assigned a value but never used.","'result' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","'UpIcon' is defined but never used.","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"'Button' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'getThemeProps' is defined but never used.","'userEmail' is assigned a value but never used.","'setUserEmail' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'renderSidebarEvent' is defined but never used.","'useRef' is defined but never used.","'TextField' is defined but never used.","'DialogContentText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [getEvents]",{"range":"116","text":"117"},[886,888],"[getEvents]"]