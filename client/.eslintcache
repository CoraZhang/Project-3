[{"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/App.js":"1","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NewNote.js":"2","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/NavBar.js":"3","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/KanBan.js":"4","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Emojiis.js":"5","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/utils/API.js":"6","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/index.js":"7","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/UserContext.js":"8","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NoteCount.js":"9","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/CalendarMain.js":"10","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Dialog.js":"11","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/config.js":"12","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/Notes.js":"13","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/AllEvents.js":"14","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/reducers/noteReducer.js":"15","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NoteList.js":"16","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Footer.js":"17","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/reportWebVitals.js":"18","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/Events.js":"19","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/EditNote.js":"20","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/Home.jsx":"21"},{"size":2559,"mtime":1607391856055,"results":"22","hashOfConfig":"23"},{"size":2127,"mtime":1606776059752,"results":"24","hashOfConfig":"23"},{"size":2009,"mtime":1607392022865,"results":"25","hashOfConfig":"23"},{"size":5702,"mtime":1606776059745,"results":"26","hashOfConfig":"23"},{"size":2755,"mtime":1606776059744,"results":"27","hashOfConfig":"23"},{"size":1237,"mtime":1607448130927,"results":"28","hashOfConfig":"23"},{"size":945,"mtime":1606509007949,"results":"29","hashOfConfig":"23"},{"size":83,"mtime":1606757127861,"results":"30","hashOfConfig":"23"},{"size":400,"mtime":1606494231099,"results":"31","hashOfConfig":"23"},{"size":8834,"mtime":1607407325241,"results":"32","hashOfConfig":"23"},{"size":1665,"mtime":1606757127862,"results":"33","hashOfConfig":"23"},{"size":615,"mtime":1607361529277,"results":"34","hashOfConfig":"23"},{"size":1314,"mtime":1606776059753,"results":"35","hashOfConfig":"23"},{"size":3718,"mtime":1607394739246,"results":"36","hashOfConfig":"23"},{"size":756,"mtime":1606494231091,"results":"37","hashOfConfig":"23"},{"size":708,"mtime":1606757127879,"results":"38","hashOfConfig":"23"},{"size":201,"mtime":1606331778829,"results":"39","hashOfConfig":"23"},{"size":362,"mtime":1606244998950,"results":"40","hashOfConfig":"23"},{"size":1949,"mtime":1606757127877,"results":"41","hashOfConfig":"23"},{"size":1598,"mtime":1606757127873,"results":"42","hashOfConfig":"23"},{"size":2124,"mtime":1606757127861,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"h21ddh",{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"47"},"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/App.js",["98","99"],"\n\nimport Events from './views/Events';\n\nimport React, { useState, useMemo } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CalendarMain from \"./views/CalendarMain\";\nimport Note from \"./views/Notes\";\nimport NewNote from \"./views/NewNote\";\nimport NoteList from \"./views/NoteList\";\nimport NoteCounter from \"./views/NoteCount\";\nimport EditNote from \"./views/EditNote\";\nimport Footer from \"./components/Footer\";\nimport Kanban from './components/KanBan'\n\nimport {useHistory} from 'react-router-dom';\nimport { OktaAuth } from '@okta/okta-auth-js';\nimport { Security, SecureRoute, LoginCallback } from '@okta/okta-react';\nimport config from './config';\nimport Home from './Home';\nimport {UserContext} from \"./UserContext\"\n\nconst oktaAuth = new OktaAuth(config.oidc);\n\nfunction App() {\n  const [userInfo, setUserInfo] = useState(null)\n  //const providerValue = useMemo(() => ({userInfo, setUserInfo}), [userInfo, setUserInfo])\n  const history = useHistory(); // example from react-router\n\n  const customAuthHandler = () => {\n    // Redirect to the /login page that has a CustomLoginComponent\n    history.push('/');\n  };\n\n  return (\n    <Security\n      oktaAuth={oktaAuth}\n      onAuthRequired={customAuthHandler}\n    >\n      <div>\n        <NavBar />\n        <div className=\"container\">\n          <Switch>\n            <UserContext.Provider value={{userInfo, setUserInfo}}>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/login/callback\" component={LoginCallback} />\n              <SecureRoute exact path=\"/CalendarMain\">\n                <CalendarMain />\n              </SecureRoute>\n              <SecureRoute path=\"/NewNote\">\n                <NewNote />\n              </SecureRoute>\n              <SecureRoute path=\"/Notes\">\n                <Note />\n              </SecureRoute>\n              <SecureRoute path=\"/NoteList\">\n                <NoteList />\n              </SecureRoute>\n              <SecureRoute path=\"/NoteCount\">\n                <NoteCounter />\n              </SecureRoute>\n              <SecureRoute path=\"/EditNote\">\n                <EditNote />\n              </SecureRoute>\n              <SecureRoute path='/Events'>\n                <Events />\n              </SecureRoute>\n              <SecureRoute path='/Kanban'>\n                  <Kanban />\n              </SecureRoute>\n            </UserContext.Provider>\n          </Switch>\n        </div>\n        <Footer />\n      </div>\n    </Security>\n\n  );\n}\n\nexport default App;\n\n",["100","101"],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NewNote.js",["102","103","104","105"],"import React, { Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport API from '../utils/API'\nimport { UserContext } from '../UserContext'\nimport { v4 as uuidv4 } from 'uuid'\nimport Emoji from '../components/Emojiis'\n\nclass NewNote extends Component {\n\n  static contextType = UserContext\n\n  constructor(props){\n    super(props);\n    this.state = {\n      emoji : \"\"\n    };\n  }\n\n  saveNote = async (note) => {\n    const loggedUser = localStorage.getItem('user')\n    const {userInfo} = this.context;\n    let result = await API.saveNote(note, loggedUser)\n    //console.log('Adding note', note, userInfo)\n  }\n  \n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //const title = this.getTitle.value;\n    //const message = this.getMessage.value;\n    const data = {\n      id: uuidv4(),\n      title: this.getTitle.value,\n      message: this.getMessage.value,\n      editing: false,\n    };\n    this.props.dispatch({\n      type: \"ADD_NOTE\",\n      data,\n    });\n\n    this.saveNote(data)\n\n    //clear input box\n    this.getTitle.value = \"\";\n    this.getMessage.value = \"\";\n  };\n  render() {\n    const {userInfo, setUserInfo} = this.context;\n    return (\n      <div className=\"note-container\" style={{position: \"relative\"}}>\n        <h1 className=\"note_heading\">Create Note</h1>\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <input\n            required\n            type=\"text\"\n            ref={(input) => (this.getTitle = input)}\n            placeholder=\"Enter Note Title\"\n          />\n          <br />\n          <br />\n          <textarea\n            required\n            rows=\"5\"\n            ref={(input) => (this.getMessage = input)}\n            cols=\"28\"\n            placeholder=\"Enter Note\"\n\n          />\n          <Emoji data={(el)=>{\n            this.setState({emoji:el},()=>{this.getMessage.value += this.state.emoji});\n            \n          }}></Emoji>\n          <br />\n          <br />\n          <button>Note</button>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    notes: state,\n  };\n};\nexport default connect(mapStateToProps)(NewNote);\n","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/NavBar.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/KanBan.js",["106"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport ListItem from '@material-ui/core/ListItem';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { green } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box';\n\nimport Dialog from './Dialog'\n\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`action-tabpanel-${index}`}\n      aria-labelledby={`action-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    'aria-controls': `action-tabpanel-${index}`,\n  };\n}\n\n\n\nconst useStyles = makeStyles((theme,matches) => ({\n  root: {\n    backgroundColor: 'white',\n    width: matches?500:1100,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: '8px',\n    right: '8px',\n  },\n  fabGreen: {\n    color: 'white',\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n}));\n\n\n\nexport default function FloatingActionButtonZoom() {\n  const [todoInput,setInput] = React.useState([])\n  const [doingInput, setDoing] = React.useState([])\n  const [doneInput, setDone] = React.useState([])\n  \n  const matches = useMediaQuery('(max-width:360px)');\n  console.log(\"media query: \", matches)\n  const theme = useTheme();\n  const classes = useStyles(theme,matches);\n  \n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\n  function changeToDo(text){\n    let list = [...doingInput];\n    list.push(text)\n    setDoing(list)\n    const todo = [...todoInput.filter(e=>e!==text)]\n    setInput(todo)\n  }\n\n  function changeDoing(text){\n    let list = [...doneInput];\n    list.push(text)\n    setDone(list)\n    const todo = [...doingInput.filter(e=>e!==text)]\n    setDoing(todo)\n  }\n\n  function changeDone(text){\n    const todo = [...doneInput.filter(e=>e!==text)]\n    setDone(todo)\n  }\n\n  const fabs = [\n    {\n      color: 'primary',\n      className: classes.fab,\n      icon: <AddIcon />,\n      label: 'Add',\n    },\n    {\n      color: 'secondary',\n      className: classes.fab,\n      icon: <EditIcon />,\n      label: 'Edit',\n    },\n    {\n      color: 'inherit',\n      className: clsx(classes.fab, classes.fabGreen),\n      icon: <AddIcon />,\n      label: 'Add',\n    },\n  ];\n  return (\n    <>\n      <div>\n          <h2>Instructions</h2>\n          <ul>\n            <li>Click on the '+' button to add items to the KanBan</li>\n            <li>Select the item to move it to the next tab</li>\n          </ul>\n      </div>\n      <div className={classes.root} style={{}}>\n        \n        <AppBar position=\"static\" color=\"default\">   \n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"action tabs example\"\n          >\n            <Tab label=\"To-Do\" {...a11yProps(0)} />\n            <Tab label=\"Doing\" {...a11yProps(1)} />\n            <Tab label=\"Done\" {...a11yProps(2)} />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={value}\n          onChangeIndex={handleChangeIndex}\n        >\n          <TabPanel value={value} index={0} dir={theme.direction}>\n            {todoInput.map(text=>{\n              return(<ListItem button onClick={()=>changeToDo(text)}>\n                {text} \n                </ListItem>)\n              \n            })}\n          </TabPanel>\n          <TabPanel value={value} index={1} dir={theme.direction}>\n            {doingInput.map(text=>{\n              return(<ListItem button onClick={()=>changeDoing(text)}>\n                {text} \n                </ListItem>)\n              \n            })}\n          </TabPanel>\n          <TabPanel value={value} index={2} dir={theme.direction}>\n          {doneInput.map(text=>{\n              return(<ListItem button onClick={()=>changeDone(text)}>\n                {text} \n                </ListItem>)\n              \n            })}\n          </TabPanel>\n        </SwipeableViews>\n        {fabs.map((fab, index) => (\n          <Zoom\n            key={fab.color}\n            in={value === 0}\n            timeout={transitionDuration}\n            style={{\n              transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n            }}\n            unmountOnExit\n          >\n            <Dialog label={fab.label} className={fab.className} color={fab.color} icon={fab.icon} func={setInput} val={todoInput}></Dialog>\n          </Zoom>\n        ))}\n\n      </div>\n    </>\n  );\n}","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Emojiis.js",["107","108","109","110","111","112","113","114","115"],"import React, {useEffect} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Fab from '@material-ui/core/Fab';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { getThemeProps } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function EmojiDrawer(props) {\n  const [emojis, setEmojis] = React.useState({}) \n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  useEffect(()=>{\n    getEmoji()\n    \n  },[])\n\n  async function getEmoji(){\n      const result = await fetch('https://raw.githubusercontent.com/omnidan/node-emoji/master/lib/emoji.json').then(r=>r.json())\n      console.log(result)\n      setEmojis(result)\n  }\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n       <GridList cellHeight={50} cols={4}>\n        {Object.values(emojis).map((e)=>{\n          return (\n          <GridListTile  cols={e.cols || 1} style={{backgroundColor:\"#F2E291\"}}>\n              <GridListTileBar title={e} style={{backgroundColor:\"#F2E291\"}} onClick={()=>props.data(e)}></GridListTileBar>\n          </GridListTile>\n        )})}\n      </GridList>\n    </div>\n  );\n\n  return (\n    <div>\n        <React.Fragment key={'right'}>\n          <Fab onClick={toggleDrawer('right', true)} style={{position:\"absolute\", right:\"0px\" }}><FavoriteIcon /></Fab>\n          <Drawer anchor={'right'} open={state['right']} onClose={toggleDrawer('right', false)}>\n            {list('right')}\n          </Drawer>\n        </React.Fragment>\n    </div>\n  );\n}","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/utils/API.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/index.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/UserContext.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NoteCount.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/CalendarMain.js",["116","117","118","119","120","121","122","123","124","125","126","127"],"import React, { useState, useEffect, useContext } from \"react\";\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport API from '../utils/API'\nimport {UserContext} from '../UserContext'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Draggable from 'react-draggable';\n\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nexport default function CalendarMain() {\n  const [weekendsVisible, setWeekendsVisible] = useState(true);\n  const [currentEvents, setCurrentEvents] = useState([]);\n  const [eventList, setEventList] = useState([])\n  const {userInfo, setUserInfo} = useContext(UserContext)\n  const [userEmail, setUserEmail] = useState(\"\")\n  const loggedUser = localStorage.getItem('user')\n  const [title, setTitle] = useState(\"\")\n  const [selectInfo, setSelectInfo] = useState({})\n  const [clickInfo, setClickInfo] = useState({})\n\n  useEffect(() => {\n    getEvents()\n  }, [])\n\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [openEvent, setOpenEvent] = React.useState(false);\n\n  // handle events for open and close add event modal\n\n  const handleOpen = (eventInfo) => {\n    setOpen(true);\n    setSelectInfo(eventInfo)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // handle events for open and close delete event dialog\n\n  const handleClickOpen = (clickedInfo) => {\n    setOpenEvent(true);\n    setClickInfo(clickedInfo)\n  };\n\n  const handleClickClose = () => {\n    setOpenEvent(false);\n  };\n\n  function handleWeekendsToggle() {\n    setWeekendsVisible(!weekendsVisible);\n  }\n\n\n  function handleInputChange(event){\n    const newEventTitle = event.target.value\n    setTitle(newEventTitle)\n  }\n\n  function handleDateSelect() {\n    let calendarApi = selectInfo.view.calendar;\n\n    calendarApi.unselect(); // clears date selection\n\n    if (title) {\n      calendarApi.addEvent({\n        id: uuidv4(),\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay,\n      });\n    }\n  }\n\n  function handleEventClick() {\n    clickInfo.event.remove()\n  }\n\n  function handleEvents(events) {\n    setCurrentEvents(events);\n  }\n\n  async function addEvents(data){\n    \n    let newEvent = {\n      id: data.event.id,\n      title: data.event.title,\n      start: data.event.start,\n      end: data.event.end,\n      allDay: data.event.allDay\n    }\n    let result = await API.addEvent(newEvent, loggedUser)\n  }\n\n  async function getEvents(){\n    let result = await API.getInfo()\n    if (result.data){\n      let currentUserData = result.data.filter(user => user.email === loggedUser)\n      console.log('[currentUserData]:', result.data)\n      currentUserData[0]?setEventList(currentUserData[0].events):setEventList([])\n    \n      \n    }\n    \n\n  }\n\n  async function updateEvent(data){\n    let result = await API.updateEvent(data, loggedUser)\n  }\n\n  async function deleteEvent(data){\n    let result = await API.deleteEvent(data.event.id, loggedUser)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <RenderSidebar handleWeekendsToggle={handleWeekendsToggle} weekendsVisible={weekendsVisible} currentEvents={currentEvents}/>\n\n          {/* Modal for adding event */}\n        <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <button className=\"btn btn-primary-outline float-right\" onClick={handleClose} style={{backgroundColor: \"transparent\"}}><i class=\"fas fa-times\"></i></button>\n            <h2 id=\"transition-modal-title\">Add a title for your event</h2>\n            <div id=\"transition-modal-description\">\n                <div className=\"mb-3\" >\n                  <input onChange={handleInputChange} type=\"title\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Title\" />\n                </div>\n                <div className=\"form-check form-switch\">\n                  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckChecked\" defaultChecked/>\n                  <label className=\"form-check-label\" for=\"flexSwitchCheckChecked\">All Day</label>\n                  <button className=\"btn btn-primary float-right\" type=\"submit\" onClick={() => {handleClose(); handleDateSelect()} }> Add to Calendar</button>\n                </div>\n            </div>\n            \n          </div>\n        </Fade>\n      </Modal>\n\n        {/* Modal for deleting event */}\n        <Dialog\n          open={openEvent}\n          onClose={handleClickClose}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n            Delete Event\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Are you sure you want to delete this event? This action is IRREVERSIBLE.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClickClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={() => {handleClickClose(); handleEventClick()}} color=\"secondary\">\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <FullCalendar\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          headerToolbar={{\n            left: \"prev,next today\",\n            center: \"title\",\n            right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n          }}\n          footerToolbar={{\n            left: \"\",\n            center: \"\",\n            right: \"\",\n          }}\n          initalView=\"dayGridMonth\"\n          editable={true}\n          selectable={true}\n          selectMirror={true}\n          dayMaxEvents={true}\n          weekends={weekendsVisible}\n          events={eventList} //TODO: or use 'events' setting to fetch from a feed\n          select={handleOpen}\n          eventContent={renderEventContent} // custom render function\n          eventClick={handleClickOpen}\n          eventsSet={handleEvents}\n          eventAdd={(response) => addEvents(response)}\n          eventChange={(response) => updateEvent(response)}\n          eventRemove={(response) => deleteEvent(response)}\n        />\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nfunction RenderSidebar(props) {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  return (\n    <div>\n      <div>\n        <h2>Instructions</h2>\n        <ul>\n          <li>Select dates and you will be prompted to create a new event</li>\n          <li>Drag, drop, and resize events</li>\n          <li>Click on an event to delete it</li>\n        </ul>\n      </div>\n      <div>\n        {/* Switch to toggle weekends */}\n        <FormControlLabel\n        control={\n          <Switch\n            checked={props.weekendsVisible}\n            onChange={props.handleWeekendsToggle}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Toggle Weekends\"\n      />\n      </div>\n    </div>\n  );\n}\n\nfunction renderEventContent(eventInfo) {\n  return (\n    <>\n      <b>{eventInfo.timeText}</b>\n      <i>{eventInfo.event.title}</i>\n    </>\n  );\n}","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Dialog.js",["128","129","130"],"import React, {useRef} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\n\n\nexport default function FormDialog(props) {\n  \n  const [open, setOpen] = React.useState(false);\n  const TextField = React.createRef();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    let Input = [...props.val]\n    Input.push(TextField.current.value)\n    props.func(Input)\n    setOpen(false);\n  };\n\n  return (\n    <div>\n        <Fab aria-label={props.label} className={props.className} color={props.color} onClick={handleClickOpen}>\n            {props.icon}\n        </Fab>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">To Do:</DialogTitle>\n        <DialogContent>\n          <input\n            ref= {TextField}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"To-Do:\"\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/config.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/Notes.js",["131"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport EditNote from \"./EditNote\";\n//import noteReducer from \".. /reducers/noteReducer\";\nclass Note extends Component {\n  \n\n  render() {\n    const notes = this.props.notes.map((note) => {\n      return (\n        <div className=\"note\">\n          <h2 className=\"note_title\">{note.title}</h2>\n          <p className=\"note_message\">{note.message}</p>\n          <div className=\"control-buttons\">\n             <button\n              className=\"edit\"\n              onClick={\n                () =>\n                  this.props.dispatch({\n                    type: \"EDIT_NOTE\",\n                    id: note.id,\n                  })\n                //this.props.location.pop(\"/EditNotes\")\n              }\n            >\n              Edit\n            </button>\n\n            <button\n              className=\"delete\"\n              onClick={() =>\n                this.props.dispatch({\n                  type: \"DELETE_NOTE\",\n                  id: note.id,\n                })\n              }\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      );\n    });\n    return <>{notes}</>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notes: state,\n  };\n};\nexport default connect(mapStateToProps)(Note);\n","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/AllEvents.js",["132","133","134","135","136","137"],"import React, {useState, useEffect} from 'react'\nimport API from '../utils/API'\nimport moment from 'moment'\nimport axios from 'axios'\n\nexport default function AllEvents(props){\n    const loggedUser = localStorage.getItem('user')\n    const [events, setEvents] = useState([])\n\n    useEffect(() => {\n        getEvents()\n    },[])\n    \n    async function getEvents(){\n        let eventsData = await API.getInfo() \n        console.log('props=', loggedUser)\n        let currentUserData = eventsData.data.filter(user => user.email === loggedUser)\n        console.log('currentUserData =', currentUserData)\n        if (currentUserData[0]){\n            //console.log('currentUserData=', currentUserData[0])\n            //console.log('Prepare to set events', currentUserData[0].events)\n            setEvents(currentUserData[0].events)\n        } else{\n            console.log('No currentUserData')\n        }\n        \n    }\n\n    function convertISO(date){\n        //var str = '2011-04-11T10:20:30Z';\n        var parts = date.slice(0, -1).split('T');\n        var dateComponent = parts[0];\n        var timeComponent = parts[1];\n        console.log('date', dateComponent);\n        console.log('time', timeComponent);\n        return dateComponent + ' ' + timeComponent\n    }\n    async function twilioReq(msg,time){\n      const result = await fetch('http://localhost:3000/api/twilio',{method:'POST', headers:{'Content-Type': 'application/json'},body:JSON.stringify({message: msg, number:'6478638146'})})\n    }\n\n    function sendMail(event){\n      let result = axios({\n        method: \"POST\",\n        url: \"https://api.sendgrid.com/v3/mail/send\",\n        headers: {\n          \"content-type\": \"application/json\",\n          authorization:\n          \"Bearer \" + process.env.SENDGRID_API_KEY,\n          },\n          data: {\n              personalizations: [\n                  {\n                  to: [{ email: props.user.email, name: (props.user.given_name + ' ' + props.user.family_name) }],\n                  dynamic_template_data: {\n                  given_name: props.user.given_name,\n                  title: event.title,\n                  start: event.start,\n                  end: event.end,\n                  },\n                  subject: \"Reminder!\",\n                  },\n              ],\n              from: { email: \"teamproducky@gmail.com\", name: \"Producky Team\" },\n              reply_to: { email: \"teamproducky@gmail.com\", name: \"Producky Team\" },\n              template_id: \"d-587a743d18654942b4d54c1e45def243\",\n          },\n          json: true,\n      })\n      console.log(result)\n    };\n\n\n    return (\n        <section>\n            <h2>Upcoming Events ({events.length})</h2>\n            <ul>{events.length ?\n            events.map((event) => {\n                return(\n                  <div className=\"card text-center rounded-lg\">\n                    <div className=\"card-header\">\n                      Start: {event.start} \n                    </div>\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">{event.title}</h5>\n                      <p className=\"card-text\"></p>\n                      <a href=\"/CalendarMain\" className=\"btn btn-primary\">View in Calendar</a>\n                      <a href=\"#\" className=\"btn btn-primary\" onClick={()=>sendMail(event)}>Set Reminder</a>\n\n                    </div>\n                    <div className=\"card-footer text-muted\">\n                      End: {event.end} \n                    </div>\n                  </div>\n                )\n              })\n            : <><h4>You have no events 😔</h4>\n              <h5>Visit the Calendar to add new events!</h5></>\n            }\n            </ul>\n            \n       </section>\n    )\n}","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/reducers/noteReducer.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/NoteList.js",["138"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Notes from \"./Notes\";\nimport EditNote from \"./EditNote\";\nimport NewNote from \"./NewNote\";\n\nclass NoteList extends Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"note_heading\">All Notes</h1>\n        {this.props.notes.map((note) => (\n          <div key={note.id}>\n            {note.editing ? (\n              <EditNote note={note} key={note.id} />\n            ):\n            (<NewNote note ={note} key={note.id}/>)}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    notes: state,\n  };\n};\n\nexport default connect(mapStateToProps)(NoteList);\n","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/components/Footer.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/reportWebVitals.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/Events.js",["139","140"],"import React, { useState, useEffect, useContext } from \"react\";\nimport Duckie from \"../components/assets/Duckie.png\";\nimport Ocean from \"../components/assets/Ocean.png\";\nimport moment from 'moment'\nimport { useOktaAuth } from '@okta/okta-react';\nimport AllEvents from '../components/AllEvents'\nimport './styles.css'\nimport API from \"../utils/API\";\nimport {UserContext} from '../UserContext'\n\n\nfunction Events(props) {\n  const [greeting, setGreeting] = useState(\"\")\n  const { authState, oktaAuth } = useOktaAuth();\n  //const [userInfo, setUserInfo] = useState(null);\n  const {userInfo, setUserInfo} = useContext(UserContext)\n\n  useEffect(() => {\n    if (!authState.isAuthenticated) {\n      // When user isn't authenticated, forget any user info\n      setUserInfo(null);\n    } else {\n      oktaAuth.getUser().then((info) => {\n        console.log('[okta getUser]: ', info)\n        setUserInfo(info);\n        sendLoginInfo(info)\n      });\n    }\n    timeOfDay()\n  }, [authState, oktaAuth]); //FIXME: maybe remove setUserInfo\n\n  async function sendLoginInfo(data){\n    //console.log('Events page: ', data)\n    let result = await API.addUser(data)\n  }\n\n  function timeOfDay(){\n    let currentTime = Number(moment().format(\"H\"))\n    if(currentTime >= 0 && currentTime < 12){\n      setGreeting(\"Good Morning\")\n    } else if (currentTime >= 12 && currentTime < 17){\n      setGreeting(\"Good Afternoon\")\n    }else if (currentTime >= 17){\n      setGreeting(\"Good Evening\")\n    } \n  }\n    return (\n    <div>\n      <div className=\"container\">\n        <h1>{greeting}, {userInfo ? userInfo.given_name : \"\"}</h1>\n        <h3 className=\"text-muted\">{moment().format(\"[Today is] dddd, MMMM Do YYYY\")}</h3>\n\n        <AllEvents user={userInfo}/>\n      </div>\n      \n      <div className=\"duckContainer\">\n        <img className=\"duckie\" src={Duckie} alt=\"\" />\n        <img className=\"ocean\" src={Ocean} alt=\"\" />\n\t    </div>\n  </div>\n    )\n}\n  \n  export default Events;\n\n\n","/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/views/EditNote.js",[],"/Users/meh/Desktop/My_Projects/bootcamp/homework/Project-3/client/src/Home.jsx",["141","142","143","144","145"],"/*\n * Copyright (c) 2018, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { useOktaAuth } from '@okta/okta-react';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Header } from 'semantic-ui-react';\nimport Producky from './components/assets/Producky.png'\n\n\nconst Home = () => {\n  const { oktaAuth, authState } = useOktaAuth();\n \n  const login = async () => {\n    oktaAuth.signInWithRedirect('/login');\n  }\n  const logout = async () => oktaAuth.signOut('/login');\n  console.log('oktaAuth: ',oktaAuth)\n  if(authState.isPending) {\n    return <div>Loading...</div>;\n  }\n \n  if(!authState.isAuthenticated) {\n    localStorage.clear()\n    return (\n      <div className=\"container-fluid loginContainer\">\n        <div className=\"logo-container\">\n          <img className=\"logo\" src={Producky} alt=\"Producky logo\" />\n        </div>\n        <div className=\"loginBox\">\n          <p>Not Logged in yet</p>\n          <button onClick={login} type=\"button\" className=\"btn btn-light\">Login</button>\n        </div>\n      </div>\n    );\n  }\n  oktaAuth.getUser().then((info) => {\n    localStorage.setItem('user', info.email)\n  });\n  \n  return (\n    <div className=\"container-fluid loginContainer\">\n      <div className=\"logo-container\">\n          <img className=\"logo\" src={Producky} alt=\"Producky logo\" />\n        </div>\n      <div className=\"loginBox\">\n        <p>Logged in!</p>\n        <button onClick={logout} type=\"button\" className=\"btn btn-light\">Logout</button>\n      </div>  \n    </div>\n  );\n};\n \n\nexport default Home;\n",{"ruleId":"146","severity":1,"message":"147","line":5,"column":27,"nodeType":"148","messageId":"149","endLine":5,"endColumn":34},{"ruleId":"146","severity":1,"message":"150","line":7,"column":27,"nodeType":"148","messageId":"149","endLine":7,"endColumn":33},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"146","severity":1,"message":"155","line":21,"column":12,"nodeType":"148","messageId":"149","endLine":21,"endColumn":20},{"ruleId":"146","severity":1,"message":"156","line":22,"column":9,"nodeType":"148","messageId":"149","endLine":22,"endColumn":15},{"ruleId":"146","severity":1,"message":"155","line":49,"column":12,"nodeType":"148","messageId":"149","endLine":49,"endColumn":20},{"ruleId":"146","severity":1,"message":"157","line":49,"column":22,"nodeType":"148","messageId":"149","endLine":49,"endColumn":33},{"ruleId":"146","severity":1,"message":"158","line":15,"column":8,"nodeType":"148","messageId":"149","endLine":15,"endColumn":14},{"ruleId":"146","severity":1,"message":"159","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":14},{"ruleId":"146","severity":1,"message":"160","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":12},{"ruleId":"146","severity":1,"message":"161","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":15},{"ruleId":"146","severity":1,"message":"162","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":16},{"ruleId":"146","severity":1,"message":"163","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":20},{"ruleId":"146","severity":1,"message":"164","line":10,"column":8,"nodeType":"148","messageId":"149","endLine":10,"endColumn":20},{"ruleId":"146","severity":1,"message":"165","line":11,"column":8,"nodeType":"148","messageId":"149","endLine":11,"endColumn":17},{"ruleId":"146","severity":1,"message":"166","line":12,"column":8,"nodeType":"148","messageId":"149","endLine":12,"endColumn":16},{"ruleId":"146","severity":1,"message":"167","line":18,"column":10,"nodeType":"148","messageId":"149","endLine":18,"endColumn":23},{"ruleId":"146","severity":1,"message":"168","line":2,"column":24,"nodeType":"148","messageId":"149","endLine":2,"endColumn":34},{"ruleId":"146","severity":1,"message":"169","line":25,"column":8,"nodeType":"148","messageId":"149","endLine":25,"endColumn":17},{"ruleId":"146","severity":1,"message":"155","line":33,"column":10,"nodeType":"148","messageId":"149","endLine":33,"endColumn":18},{"ruleId":"146","severity":1,"message":"157","line":33,"column":20,"nodeType":"148","messageId":"149","endLine":33,"endColumn":31},{"ruleId":"146","severity":1,"message":"170","line":34,"column":10,"nodeType":"148","messageId":"149","endLine":34,"endColumn":19},{"ruleId":"146","severity":1,"message":"171","line":34,"column":21,"nodeType":"148","messageId":"149","endLine":34,"endColumn":33},{"ruleId":"172","severity":1,"message":"173","line":42,"column":6,"nodeType":"174","endLine":42,"endColumn":8,"suggestions":"175"},{"ruleId":"146","severity":1,"message":"156","line":115,"column":9,"nodeType":"148","messageId":"149","endLine":115,"endColumn":15},{"ruleId":"146","severity":1,"message":"156","line":132,"column":9,"nodeType":"148","messageId":"149","endLine":132,"endColumn":15},{"ruleId":"146","severity":1,"message":"156","line":136,"column":9,"nodeType":"148","messageId":"149","endLine":136,"endColumn":15},{"ruleId":"146","severity":1,"message":"176","line":256,"column":10,"nodeType":"148","messageId":"149","endLine":256,"endColumn":15},{"ruleId":"146","severity":1,"message":"177","line":256,"column":17,"nodeType":"148","messageId":"149","endLine":256,"endColumn":25},{"ruleId":"146","severity":1,"message":"178","line":1,"column":16,"nodeType":"148","messageId":"149","endLine":1,"endColumn":22},{"ruleId":"146","severity":1,"message":"179","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":17},{"ruleId":"146","severity":1,"message":"180","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":25},{"ruleId":"146","severity":1,"message":"181","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":16},{"ruleId":"146","severity":1,"message":"182","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":14},{"ruleId":"172","severity":1,"message":"173","line":12,"column":7,"nodeType":"174","endLine":12,"endColumn":9,"suggestions":"183"},{"ruleId":"146","severity":1,"message":"184","line":29,"column":14,"nodeType":"148","messageId":"149","endLine":29,"endColumn":24},{"ruleId":"146","severity":1,"message":"185","line":38,"column":20,"nodeType":"148","messageId":"149","endLine":38,"endColumn":29},{"ruleId":"146","severity":1,"message":"156","line":39,"column":13,"nodeType":"148","messageId":"149","endLine":39,"endColumn":19},{"ruleId":"186","severity":1,"message":"187","line":88,"column":23,"nodeType":"188","endLine":88,"endColumn":93},{"ruleId":"146","severity":1,"message":"189","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":13},{"ruleId":"172","severity":1,"message":"190","line":30,"column":6,"nodeType":"174","endLine":30,"endColumn":27,"suggestions":"191"},{"ruleId":"146","severity":1,"message":"156","line":34,"column":9,"nodeType":"148","messageId":"149","endLine":34,"endColumn":15},{"ruleId":"146","severity":1,"message":"192","line":14,"column":17,"nodeType":"148","messageId":"149","endLine":14,"endColumn":25},{"ruleId":"146","severity":1,"message":"193","line":14,"column":27,"nodeType":"148","messageId":"149","endLine":14,"endColumn":36},{"ruleId":"146","severity":1,"message":"194","line":15,"column":10,"nodeType":"148","messageId":"149","endLine":15,"endColumn":20},{"ruleId":"146","severity":1,"message":"159","line":16,"column":10,"nodeType":"148","messageId":"149","endLine":16,"endColumn":16},{"ruleId":"146","severity":1,"message":"195","line":16,"column":18,"nodeType":"148","messageId":"149","endLine":16,"endColumn":24},"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","no-native-reassign",["196"],"no-negated-in-lhs",["197"],"'userInfo' is assigned a value but never used.","'result' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","'UpIcon' is defined but never used.","'Button' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'getThemeProps' is defined but never used.","'formatDate' is defined but never used.","'FormGroup' is defined but never used.","'userEmail' is assigned a value but never used.","'setUserEmail' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'useRef' is defined but never used.","'TextField' is defined but never used.","'DialogContentText' is defined but never used.","'EditNote' is defined but never used.","'moment' is defined but never used.",["199"],"'convertISO' is defined but never used.","'twilioReq' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Notes' is defined but never used.","React Hook useEffect has a missing dependency: 'setUserInfo'. Either include it or remove the dependency array.",["200"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'Header' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"201","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [getEvents]",{"range":"206","text":"207"},{"range":"208","text":"207"},"Update the dependencies array to be: [authState, oktaAuth, setUserInfo]",{"range":"209","text":"210"},[1747,1749],"[getEvents]",[323,325],[962,983],"[authState, oktaAuth, setUserInfo]"]